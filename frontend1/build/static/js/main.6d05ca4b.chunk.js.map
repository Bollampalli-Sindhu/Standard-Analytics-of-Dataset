{"version":3,"sources":["components/featuredInfo/FeaturedInfo.jsx","pages/home/Home.jsx","pages/analysis/Analysis.jsx","App.js","reportWebVitals.js","index.js"],"names":["items","FeaturedInfo","useNavigate","itemList","map","item","index","react_default","a","createElement","Grid","lg","sm","xs","container","spacing","className","key","react_router_dom","to","pathname","state","dataset","Home","Button","styled","button","_templateObject","Object","taggedTemplateLiteral","AnalysisPage","_templateObject2","_ref","active","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","model_name","dataset_size","citations","downloads","description","dataset_name","match","params","datasetName","analytics_json","get_metadata","handleDownload","bind","assertThisInitialized","_this2","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","then","response","json","data","setState","prevState","_this3","get_analytics","catch","err","console","log","_this4","parse","x","keys","values","Fragment","variant","onClick","Component","App","react_router","exact","path","element","useParams","Analysis_AnalysisPage","objectSpread","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6d05ca4b.chunk.js","sourcesContent":["import \"./featuredInfo.css\";\nimport {Grid} from \"@material-ui/core\"\nimport { useNavigate } from \"react-router-dom\";\n// import {Navbar} from \"../Navbar/Navbar\";\nimport {Link} from 'react-router-dom';\nimport React, { Component, useState } from \"react\";\n\nlet items=['Covid Dataset','Credit Card Fraud Detection','\tEuropean Soccer Database','Red Wine Quality','Titanic','Medical Cost Personal Dataset',\n            'MNIST','MS-COCO','ImageNet','VisualQA','SVHN','CIFAR-10','Fashion-MNIST','IMDB-Reviews','WordNet','Music Archive','Libri Speech','VoxCeleb','IMDB-Wiki',\n            'Google Books N-grams','TIMIT'];\n\nexport default function FeaturedInfo() {\n  const navigate = useNavigate();\n  \n  let itemList = items.map((item, index) => {\n    return (\n      <Grid item lg={4} sm={6} xs={12} container spacing={0}>\n        <div className=\"featuredItem\">\n          <span\n            className=\"featuredTitle\"\n            key={index}\n          >\n            <Link className=\"dataset\"\n              to={{\n                pathname: \"/analysis/\"+item,\n                state: { dataset:{item} },\n              }}\n            >\n            {item}\n            </Link>\n          </span>\n        </div>\n      </Grid>\n    );\n  });\n  return (\n    <div className=\"featured\">\n      <Grid item xs={12} container spacing={5}>\n        {itemList}\n      </Grid>\n    </div>\n  );\n}\n","import \"./home.css\";\nimport React, { Component, useState } from \"react\";\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\n// import Chart from \"../../components/chart/Chart\";\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <FeaturedInfo />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"styled-components\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./analysis.css\";\n// import {Scrollbars} from \"react-custom-scrollbars\"\n\nconst types = [\"MetaData\",\"Analysis\"]\n\nconst Button = styled.button`\n  background-color: \"#333333\";\n  color: white;\n  padding: 5px 15px;\n  border-radius: 5px;\n  outline: 0;\n  text-transform: uppercase;\n  margin: 10px 0px;\n  cursor: pointer;\n  box-shadow: 0px 2px 2px lightgray;\n  transition: ease background-color 250ms;\n  &:hover {\n    background-color: \"black\";\n  }\n  &:disabled {\n    cursor: default;\n    opacity: 0.7;\n  }\n`;\n\nconst Tab = styled.button`\n  padding: 10px 30px;\n  cursor: pointer;\n  opacity: 0.6;\n  background: white;\n  border: 0;\n  outline: 0;\n  border-bottom: 2px solid transparent;\n  transition: ease border-bottom 250ms;\n  ${({ active }) =>\n    active &&\n    `\n    border-bottom: 2px solid black;\n    opacity: 1;\n  `}\n`;\n\nexport default class AnalysisPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model_name: \"None\",\n      dataset_size: 0,\n      citations: 0,\n      downloads: 0,\n      description: \"None\",\n    };\n    this.dataset_name = this.props.match.params.datasetName;\n    this.model_name = \"None\"\n    this.analytics_json=\"None\"\n    this.get_metadata();\n    // this.get_download_track();\n    this.handleDownload = this.handleDownload.bind(this);\n    this.state = {\n      downloads: 0,\n    };\n  }\n\n  handleDownload(){\n    fetch(\"/dataset/analysis\", {\n      method: 'post',\n      headers:{ \n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        model_name: this.state.model_name,\n        downloads: (this.state.downloads + 1),\n        citations: this.state.citations,\n      })\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState((prevState) => ({\n          downloads: prevState.downloads + 1,\n        }));\n      });\n  }\n\n  get_metadata() {\n    fetch(\"/dataset/get_metadata\" + \"?dataset=\" + this.dataset_name)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          model_name: data.model_name,\n          dataset_size: data.dataset_size,\n          citations: data.citations,\n          downloads: data.downloads,\n          description: data.description,\n        });\n        this.model_name = data.model_name\n        this.get_analytics()\n      })\n      .catch((err) => console.log(\"Error in fetching\"));\n  }\n\n  get_analytics() {\n    \n    fetch(\"/dataset/get_data?model=\" + this.model_name)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data)\n        this.analytics_json = JSON.parse(data)\n        })\n      .catch((err) => console.log(\"Error in fetching analytics\"));\n   \n    \n  }\n\n  get_download_track() {\n    fetch(\"/dataset/track_download\" + \"?dataset=\" + this.dataset_name)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data)\n        const x = Object.keys(data)\n        const y = Object.values(data)\n        console.log(typeof(x))\n        \n      })\n      .catch((err) => console.log(\"Error in fetching\"));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"grid1\">\n          <Grid item xs={12} container spacing={5}>\n            <Grid item lg={6} sm={12} xs={12} container spacing={0} className=\"dataset\">\n              <h1>{this.dataset_name}</h1>\n            </Grid>\n            <Grid item lg={6} sm={12} xs={12} container spacing={0} className=\"download\">\n              <Button\n                className=\"button\"\n                variant=\"contained\"\n                onClick={this.handleDownload}\n              >\n              <h3>Download ({this.state.dataset_size} KB) </h3>\n              </Button>\n            </Grid> \n            <Grid item lg={6} sm={12} xs={12} container spacing={0} className=\"dataset\">\n              <p>{this.state.description}</p>\n            </Grid>\n          </Grid> \n          <hr className=\"horizontal_line_main\"></hr>\n          <div>\n            <h2>About dataset</h2>\n            <p>{this.state.description}</p>\n          </div>\n          <hr className=\"horizontal_line\"></hr>\n          <div>\n            <h2>Number of downloads</h2>\n            <p>{this.state.downloads}</p>\n          </div>\n          <hr className=\"horizontal_line\"></hr>\n          <div>\n            <h2>Number of citations</h2>\n            <p>{this.state.citations}</p>\n          </div>\n          <hr className=\"horizontal_line\"></hr>\n          <div>\n            <h2>Analytics of dataset</h2>\n          </div>\n          <hr className=\"horizontal_line\"></hr>\n          <p>test</p>\n          <p>{this.analytics_json}</p>\n        </div>\n      </>\n    );\n  }\n}","import \"./App.css\";\nimport Home from \"./pages/home/Home\";\nimport AnalysisPage from \"./pages/analysis/Analysis\";\nimport React, { Component, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, useParams, Route } from \"react-router-dom\";\n\nfunction App() {\n  const Wrapper = (props) => {\n    const params = useParams();\n    return <AnalysisPage {...{ ...props, match: { params } }} />;\n  };\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route exact path=\"/\" element={<Home/>}/>\n          <Route path=\"/analysis/:datasetName\" element={<Wrapper />} />\n          {/* <Route path = '/analysis' element = {<AnalysisPage/>}/> */}\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}