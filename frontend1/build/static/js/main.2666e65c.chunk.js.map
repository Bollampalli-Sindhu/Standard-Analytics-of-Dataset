{"version":3,"sources":["components/featuredInfo/FeaturedInfo.jsx","pages/home/Home.jsx","components/chart/Chart.jsx","pages/analysis/Analysis.jsx","App.js","reportWebVitals.js","index.js"],"names":["items","FeaturedInfo","useNavigate","itemList","map","item","index","react_default","a","createElement","Grid","lg","sm","xs","container","spacing","className","key","react_router_dom","to","pathname","state","dataset","Home","Chart","_ref","title","data","dataKey","grid","ResponsiveContainer","width","aspect","LineChart","XAxis","stroke","Line","type","Tooltip","CartesianGrid","strokeDasharray","Button","styled","button","_templateObject","Object","taggedTemplateLiteral","_templateObject2","active","Dummy","props","keys","value","_i","_Object$entries","entries","length","_ref4","_ref3","slicedToArray","key_","push","Fragment","Sample","_i2","_Object$entries2","_ref7","_ref6","console","log","AnalysisPage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","model_name","dataset_size","citations","downloads","description","analytics_json","chart_data","dataset_name","match","params","datasetName","get_metadata","handleDownload","bind","assertThisInitialized","handleCitation","_this2","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","then","response","json","month","Date","getMonth","val","count","setState","prevState","get_download_track","_this3","response1","data1","response2","data2","chart_","_i3","_Object$entries3","_ref10","_ref9","temp","_this4","_i4","_Object$entries4","_ref13","_ref12","catch","err","variant","onClick","Component","App","react_router","exact","path","element","useParams","Analysis_AnalysisPage","objectSpread","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2666e65c.chunk.js","sourcesContent":["import \"./featuredInfo.css\";\nimport {Grid} from \"@material-ui/core\"\nimport { useNavigate } from \"react-router-dom\";\n// import {Navbar} from \"../Navbar/Navbar\";\nimport {Link} from 'react-router-dom';\nimport React, { Component, useState } from \"react\";\n\nlet items=['Covid Dataset','Credit Card Fraud Detection','\tEuropean Soccer Database','Red Wine Quality','Titanic','Medical Cost Personal Dataset',\n            'MNIST','MS-COCO','ImageNet','VisualQA','SVHN','CIFAR-10','Fashion-MNIST','IMDB-Reviews','WordNet','Music Archive','Libri Speech','VoxCeleb','IMDB-Wiki',\n            'Google Books N-grams','TIMIT'];\n\nexport default function FeaturedInfo() {\n  const navigate = useNavigate();\n  \n  let itemList = items.map((item, index) => {\n    return (\n      <Grid item lg={4} sm={6} xs={12} container spacing={0}>\n        <div className=\"featuredItem\">\n          <span\n            className=\"featuredTitle\"\n            key={index}\n          >\n            <Link className=\"dataset\"\n              to={{\n                pathname: \"/analysis/\"+item,\n                state: { dataset:{item} },\n              }}\n            >\n            {item}\n            </Link>\n          </span>\n        </div>\n      </Grid>\n    );\n  });\n  return (\n    <div className=\"featured\">\n      <Grid item xs={12} container spacing={5}>\n        {itemList}\n      </Grid>\n    </div>\n  );\n}\n","import \"./home.css\";\nimport React, { Component, useState } from \"react\";\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\n// import Chart from \"../../components/chart/Chart\";\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <FeaturedInfo />\n    </div>\n  );\n}\n","import \"./chart.css\";\nimport React, { Component }  from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nexport default function Chart({ title, data, dataKey, grid }) {\n\n  return (\n    <div className=\"chart\">\n      <h3 className=\"chartTitle\">{title}</h3>\n      <ResponsiveContainer width=\"100%\" aspect={4 / 1}>\n        <LineChart data={data}>\n          <XAxis dataKey=\"name\" stroke=\"#5550bd\" />\n          <Line type=\"monotone\" dataKey={dataKey} stroke=\"#5550bd\" />\n          <Tooltip />\n          {grid && <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\" />}\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Chart from \"../../components/chart/Chart\";\nimport { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"styled-components\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./analysis.css\";\n// import {Scrollbars} from \"react-custom-scrollbars\"\n\nconst types = [\"MetaData\",\"Analysis\"]\n\nconst userData = [\n  {\n    name: \"Jan\",\n    \"Active User\": 4000,\n  },\n  {\n    name: \"Feb\",\n    \"Active User\": 3000,\n  },\n  {\n    name: \"Mar\",\n    \"Active User\": 5000,\n  },\n  {\n    name: \"Apr\",\n    \"Active User\": 4000,\n  },\n  {\n    name: \"May\",\n    \"Active User\": 3000,\n  },\n  {\n    name: \"Jun\",\n    \"Active User\": 2000,\n  },\n  {\n    name: \"Jul\",\n    \"Active User\": 4000,\n  },\n  {\n    name: \"Agu\",\n    \"Active User\": 3000,\n  },\n  {\n    name: \"Sep\",\n    \"Active User\": 4000,\n  },\n  {\n    name: \"Oct\",\n    \"Active User\": 1000,\n  },\n  {\n    name: \"Nov\",\n    \"Active User\": 4000,\n  },\n  {\n    name: \"Dec\",\n    \"Active User\": 3000,\n  },\n];\n\nconst Button = styled.button`\n  background-color: \"#333333\";\n  color: white;\n  padding: 5px 15px;\n  border-radius: 5px;\n  outline: 0;\n  text-transform: uppercase;\n  margin: 10px 0px;\n  cursor: pointer;\n  box-shadow: 0px 2px 2px lightgray;\n  transition: ease background-color 250ms;\n  &:hover {\n    background-color: \"black\";\n  }\n  &:disabled {\n    cursor: default;\n    opacity: 0.7;\n  }\n`;\n\nconst Tab = styled.button`\n  padding: 10px 30px;\n  cursor: pointer;\n  opacity: 0.6;\n  background: white;\n  border: 0;\n  outline: 0;\n  border-bottom: 2px solid transparent;\n  transition: ease border-bottom 250ms;\n  ${({ active }) =>\n    active &&\n    `\n    border-bottom: 2px solid black;\n    opacity: 1;\n  `}\n`;\n\nexport function Dummy(props){\n  const key = props.keys;\n  const value = props.value;\n  const items = [];\n  let index = 0;\n  for (let [key_, value] of Object.entries(value)){\n    items.push( <li key={index}>{key_}:{value}</li>)\n    index += 1\n  }\n  return(\n    <>\n    <h3>{key}</h3>\n    {items}\n    </>\n  )\n}\n\nexport function Sample(props){\n  const data = (props.data);\n  const items = [];\n  // console.log(\"----Sample----\");\n  // console.log(props.data);\n  // const k = Object.keys(props.data);\n  // const val = Object.values(props.data);\n  let index = 0\n  for (let [key_, value] of Object.entries(data)){\n    items.push( <Dummy key={index} keys={key_} value={value}/>)\n    index += 1\n  }\n  console.log(\"items\")\n  console.log(items)\n  // console.log(\"---Columns---\");\n  // console.log(val);\n  // console.log(\"---Values---\");\n  // console.log(val);\n  // const col = k;\n\n  // let itemList = data.map((item, index) => {\n  //   return (\n  //     <div key={item}>\n  //       {index}\n  //     </div>\n  //   );\n  // });\n\n\n\n  return (\n    <>\n      <ul>{items}</ul>\n      {/* {itemList} */}\n    </>\n  );\n}\n\nexport default class AnalysisPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      model_name: \"None\",\n      dataset_size: 0,\n      citations: 0,\n      downloads: 0,\n      description: \"None\",\n      analytics_json:{},\n      chart_data : []\n    };\n    this.dataset_name = this.props.match.params.datasetName;\n    this.model_name = \"None\"\n    // this.get_metadata = this.get_metadata1.bind(this);\n    this.get_metadata();\n    // this.get_download_track();\n    this.handleDownload = this.handleDownload.bind(this);\n    this.handleCitation = this.handleCitation.bind(this);\n    \n    // this.state = {\n    //   downloads: 0,\n    // };\n  }\n\n  handleDownload(){\n    fetch(\"/dataset/analysis\", {\n      method: 'post',\n      headers:{ \n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        model_name: this.state.model_name,\n        downloads: (this.state.downloads + 1),\n        citations: this.state.citations,\n      })\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        var today = new Date();\n        var month = today.getMonth() \n        console.log(typeof(month))\n        let val = this.state.chart_data[month].count \n        console.log(\"month increment: \", val)\n        this.setState((prevState) => ({\n          downloads: prevState.downloads + 1,\n        //   chart_data: {\n        //     ...prevState.chart_data,\n        //     [prevState.chart_data[month].count]: val+1,\n        // },\n        }));\n        this.get_download_track()\n      });\n  }\n\n  handleCitation(){\n    fetch(\"/dataset/analysis\", {\n      method: 'post',\n      headers:{ \n        \"Content-Type\": \"application/json\",\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        model_name: this.state.model_name,\n        downloads: this.state.downloads ,\n        citations: (this.state.citations+1),\n      })\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState((prevState) => ({\n          citations: prevState.citations + 1,\n        }));\n        // this.get_download_track()\n      });\n  }\n  \n  async get_metadata() {\n    const response = await fetch(\"/dataset/get_metadata\" + \"?dataset=\" + this.dataset_name)\n    const data = await response.json();\n    this.model_name = data.model_name;\n    \n    const response1 = await fetch(\"/dataset/get_data?model=\" + this.model_name);\n    const data1 = await response1.json();\n\n    const response2 = await fetch(\"/dataset/track_download\" + \"?dataset=\" + this.dataset_name);\n    const data2 = await response2.json();\n    let chart_ = []\n    for(let [key, val] of Object.entries(data2)) {\n      let temp = {}\n      temp['month'] = key\n      temp['count'] = val\n      chart_.push(temp)\n    }\n    console.log(chart_)\n    this.setState({\n      analytics_json: data1, \n      model_name: data.model_name,\n      dataset_size: data.dataset_size,\n      citations: data.citations,\n      downloads: data.downloads,\n      description: data.description,\n      chart_data: chart_\n    });\n    console.log(data1)\n    console.log(this.state.analytics_json)\n    \n\n    \n    // fetch(\"/dataset/get_metadata\" + \"?dataset=\" + this.dataset_name)\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     console.log(this)\n    //     console.log('Response body of outer \"url\":');\n    //     this.model_name = data.model_name;\n    //     const response1 = await fetch(\"/dataset/get_data?model=\" + this.model_name);\n    //     const res_json = await response1.json();\n    //     console.log(res_json)\n    //     console.log(this)\n        // fetch(\"/dataset/get_data?model=\" + this.model_name)\n        // .then(function (response1) {\n        //   response1.json().then(function (data2) {\n        //     console.log('Response body of inner \"anotherUrl\":');\n        //     console.log(JSON.stringify(data) + '\\n\\n');\n        //     console.log(JSON.stringify(data2) + '\\n\\n');\n        //     console.log(this)\n        //     // this.setState({\n        //     //   analytics_json: data2, \n        //     //   model_name: data.model_name,\n        //     //   dataset_size: data.dataset_size,\n        //     //   citations: data.citations,\n        //     //   downloads: data.downloads,\n        //     //   description: data.description,\n              \n        //     // });\n        //   }.bind(this));\n        // }).catch(function () {\n        //   console.log('Booo');\n        // });\n    \n      // })\n      // .catch((err) => console.log(\"Error in fetching metadata\"));\n  }\n\n  // isEmpty(obj) {\n  //   return Object.keys(obj).length === 0;\n  // }\n\n  // get_analytics() {\n  //   if(this.isEmpty(this.state.analytics_json)){\n  //     fetch(\"/dataset/get_data?model=\" + this.model_name)\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       console.log(\"first\")\n  //       console.log(data)\n  //       console.log(\"below\")\n  //       this.setState({\n  //         analytics_json: data.sample_id,\n  //       });\n  //       console.log(\"second\")\n  //       console.log(this.state.analytics_json)\n  //       })\n  //     .catch((err) => console.log(\"Error in fetching analytics\"));\n  //   }\n    \n  // }\n\n  // async get_analytics1() {\n  //   try{\n  //     let response = await fetch(\"/dataset/get_data?model=\" + this.model_name);\n  //     console.log(\"line 130\")\n  //     console.log(response)\n  //     let data = response.json()\n      \n  //     console.log(\"line 132\")\n  //   // console.log(data)\n  //     console.log(\"third_below\")\n  //     // .then((response) => response.json())\n  //     // .then((data) => {\n  //     this.setState({\n  //       analytics_json : 20\n  //     });  \n  //     this.data = data  \n  //     console.log(\"second\")\n  //       // console.log(this.state.analytics_json)\n  //       // })\n  //     // .catch((err) => console.log(\"Error in fetching analytics\"));\n  //   }\n  //   catch(error){\n  //     console.log(\"error in fetching analytics\")\n  //   }\n  // }\n\n  get_download_track() {\n    fetch(\"/dataset/track_download\" + \"?dataset=\" + this.dataset_name)\n      .then((response) => response.json())\n      .then((data) => {\n        let chart_ = []\n        for(let [key, val] of Object.entries(data)) {\n          let temp = {}\n          temp['month'] = key\n          temp['count'] = val\n          chart_.push(temp)\n        }\n        this.setState({\n          chart_data: chart_\n        });\n      })\n      .catch((err) => console.log(\"Error in fetching\"));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"grid1\">\n          <Grid item xs={12} container spacing={5}>\n            <Grid item lg={6} sm={12} xs={12} container spacing={0} className=\"dataset\">\n              <h1>{this.dataset_name}</h1>\n            </Grid>\n            <Grid item lg={6} sm={12} xs={12} container spacing={0} className=\"download\">\n              <Button\n                className=\"button\"\n                variant=\"contained\"\n                onClick={this.handleDownload}\n              >\n              <h3>Download ({this.state.dataset_size} KB) </h3>\n              </Button>\n            </Grid> \n            <Grid item lg={6} sm={12} xs={12} container spacing={0} className=\"dataset\">\n              <p>{this.state.description}</p>\n            </Grid>\n          </Grid> \n          <hr className=\"horizontal_line_main\"></hr>\n          <div>\n            <h2>About dataset</h2>\n            <p>{this.state.description}</p>\n          </div>\n          <hr className=\"horizontal_line\"></hr>\n          <div>\n            <h2>Number of downloads</h2>\n            <p>{this.state.downloads}</p>\n          </div>\n          <hr className=\"horizontal_line\"></hr>\n          <div>\n            <h2>Number of citations</h2>\n            <p>{this.state.citations}</p>\n          </div>\n          <hr className=\"horizontal_line\"></hr>\n          <div>\n            <h2>Analytics of dataset</h2>\n          </div>\n          <hr className=\"horizontal_line\"></hr>\n          <Sample data={this.state.analytics_json}/>\n          {/* <p>{this.state.chart_data[4].count}</p> */}\n          <div>\n            <Chart data={this.state.chart_data} title=\"User Analytics\" grid dataKey=\"count\"/>\n          </div>\n          <Grid item lg={6} sm={12} xs={12} container spacing={0} className=\"download\">\n              <Button\n                className=\"button\"\n                variant=\"contained\"\n                onClick={this.handleCitation}\n              >\n              <h3>Did you Cite this? (click if yes) </h3>\n              </Button>\n            </Grid> \n        </div>\n      </>\n    );\n  }\n}","import \"./App.css\";\nimport Home from \"./pages/home/Home\";\nimport AnalysisPage from \"./pages/analysis/Analysis\";\nimport React, { Component, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, useParams, Route } from \"react-router-dom\";\n\nfunction App() {\n  const Wrapper = (props) => {\n    const params = useParams();\n    return <AnalysisPage {...{ ...props, match: { params } }} />;\n  };\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route exact path=\"/\" element={<Home/>}/>\n          <Route path=\"/analysis/:datasetName\" element={<Wrapper />} />\n          {/* <Route path = '/analysis' element = {<AnalysisPage/>}/> */}\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}