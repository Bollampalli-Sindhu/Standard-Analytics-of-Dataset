{"version":3,"sources":["components/featuredInfo/FeaturedInfo.jsx","pages/home/Home.jsx","pages/analysis/Analysis.jsx","App.js","reportWebVitals.js","index.js"],"names":["items","FeaturedInfo","useNavigate","itemList","map","item","index","react_default","a","createElement","Grid","lg","sm","xs","container","spacing","className","key","react_router_dom","to","pathname","state","dataset","Home","Button","styled","button","_templateObject","Object","taggedTemplateLiteral","_templateObject2","_ref","active","AnalysisPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","model_name","dataset_size","citations","downloads","description","dataset_name","match","params","datasetName","get_metadata","get_download_track","handleDownload","bind","assertThisInitialized","_this2","fetch","method","headers","Content-Type","Accept","body","JSON","stringify","then","response","json","data","setState","prevState","_this3","catch","err","console","log","x","keys","values","Fragment","variant","onClick","Component","App","react_router","exact","path","element","useParams","Analysis_AnalysisPage","objectSpread","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.98a1556a.chunk.js","sourcesContent":["import \"./featuredInfo.css\";\nimport {Grid} from \"@material-ui/core\"\nimport { useNavigate } from \"react-router-dom\";\n// import {Navbar} from \"../Navbar/Navbar\";\nimport {Link} from 'react-router-dom';\nimport React, { Component, useState } from \"react\";\n\nlet items=['Covid Dataset','Credit Card Fraud Detection','\tEuropean Soccer Database','Red Wine Quality','Titanic','Medical Cost Personal Dataset',\n            'MNIST','MS-COCO','ImageNet','VisualQA','SVHN','CIFAR-10','Fashion-MNIST','IMDB-Reviews','WordNet','Music Archive','Libri Speech','VoxCeleb','IMDB-Wiki',\n            'Google Books N-grams','TIMIT'];\n\nexport default function FeaturedInfo() {\n  const navigate = useNavigate();\n  \n  let itemList = items.map((item, index) => {\n    return (\n      <Grid item lg={4} sm={6} xs={12} container spacing={0}>\n        <div className=\"featuredItem\">\n          <span\n            className=\"featuredTitle\"\n            key={index}\n          >\n            <Link className=\"dataset\"\n              to={{\n                pathname: \"/analysis/\"+item,\n                state: { dataset:{item} },\n              }}\n            >\n            {item}\n            </Link>\n          </span>\n        </div>\n      </Grid>\n    );\n  });\n  return (\n    <div className=\"featured\">\n      <Grid item xs={12} container spacing={5}>\n        {itemList}\n      </Grid>\n    </div>\n  );\n}\n","import \"./home.css\";\nimport React, { Component, useState } from \"react\";\nimport FeaturedInfo from \"../../components/featuredInfo/FeaturedInfo\";\n// import Chart from \"../../components/chart/Chart\";\n\nexport default function Home() {\n  return (\n    <div className=\"home\">\n      <FeaturedInfo />\n    </div>\n  );\n}\n","import React, { Component, useState } from \"react\";\r\n\r\n// import Button from \"@material-ui/core/Button\";\r\nimport styled from \"styled-components\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./analysis.css\";\r\n\r\nconst types = [\"MetaData\",\"Analysis\"]\r\n\r\nconst Button = styled.button`\r\n  background-color: \"#333333\";\r\n  color: white;\r\n  padding: 5px 15px;\r\n  border-radius: 5px;\r\n  outline: 0;\r\n  text-transform: uppercase;\r\n  margin: 10px 0px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 2px lightgray;\r\n  transition: ease background-color 250ms;\r\n  &:hover {\r\n    background-color: \"black\";\r\n  }\r\n  &:disabled {\r\n    cursor: default;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst Tab = styled.button`\r\n  padding: 10px 30px;\r\n  cursor: pointer;\r\n  opacity: 0.6;\r\n  background: white;\r\n  border: 0;\r\n  outline: 0;\r\n  border-bottom: 2px solid transparent;\r\n  transition: ease border-bottom 250ms;\r\n  ${({ active }) =>\r\n    active &&\r\n    `\r\n    border-bottom: 2px solid black;\r\n    opacity: 1;\r\n  `}\r\n`;\r\n\r\nfunction TabGroup() {\r\n  const [active, setActive] = useState(types[0]);\r\n  return (\r\n    <>\r\n      <div>\r\n        {types.map((type) => (\r\n          <Tab\r\n            key={type}\r\n            active={active === type}\r\n            onClick={() => setActive(type)}\r\n          >\r\n            {type}\r\n          </Tab>\r\n        ))}\r\n      </div>\r\n      <p />\r\n      <p> Your payment selection: {active} </p>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default class AnalysisPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      model_name: \"None\",\r\n      dataset_size: 0,\r\n      citations: 0,\r\n      downloads: 0,\r\n      description: \"None\",\r\n    };\r\n    this.dataset_name = this.props.match.params.datasetName;\r\n    this.get_metadata();\r\n    this.get_download_track();\r\n    this.handleDownload = this.handleDownload.bind(this);\r\n    this.state = {\r\n      downloads: 0,\r\n    };\r\n  }\r\n\r\n  handleDownload(){\r\n    fetch(\"/dataset/analysis\", {\r\n      method: 'post',\r\n      headers:{ \r\n        \"Content-Type\": \"application/json\",\r\n        'Accept': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        model_name: this.state.model_name,\r\n        downloads: (this.state.downloads + 1),\r\n        citations: this.state.citations,\r\n      })\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState((prevState) => ({\r\n          downloads: prevState.downloads + 1,\r\n        }));\r\n      });\r\n  }\r\n\r\n  get_metadata() {\r\n    fetch(\"/dataset/get_metadata\" + \"?dataset=\" + this.dataset_name)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          model_name: data.model_name,\r\n          dataset_size: data.dataset_size,\r\n          citations: data.citations,\r\n          downloads: data.downloads,\r\n          description: data.description,\r\n        });\r\n      })\r\n      .catch((err) => console.log(\"Error in fetching\"));\r\n  }\r\n\r\n  get_download_track() {\r\n    fetch(\"/dataset/track_download\" + \"?dataset=\" + this.dataset_name)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data)\r\n        const x = Object.keys(data)\r\n        const y = Object.values(data)\r\n        console.log(typeof(x))\r\n        \r\n      })\r\n      .catch((err) => console.log(\"Error in fetching\"));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"grid1\">\r\n          <Grid item xs={12} container spacing={5}>\r\n            <Grid item lg={6} sm={12} xs={12} container spacing={0} className=\"dataset\">\r\n              <h1>{this.dataset_name}</h1>\r\n            </Grid>\r\n            <Grid item lg={6} sm={12} xs={12} container spacing={0} className=\"download\">\r\n              <Button\r\n                className=\"button\"\r\n                variant=\"contained\"\r\n                onClick={this.handleDownload}\r\n              >\r\n              <h3>Download ({this.state.dataset_size} KB) </h3>\r\n              </Button>\r\n            </Grid> \r\n            <Grid item lg={6} sm={12} xs={12} container spacing={0} className=\"dataset\">\r\n              <p>{this.state.description}</p>\r\n            </Grid>\r\n          </Grid> \r\n          <hr className=\"horizontal_line_main\"></hr>\r\n          <div>\r\n            <h2>About dataset</h2>\r\n            <p>{this.state.description}</p>\r\n          </div>\r\n          <hr className=\"horizontal_line\"></hr>\r\n          <div>\r\n            <h2>Number of downloads</h2>\r\n            <p>{this.state.downloads}</p>\r\n          </div>\r\n          <hr className=\"horizontal_line\"></hr>\r\n          <div>\r\n            <h2>Number of citations</h2>\r\n            <p>{this.state.citations}</p>\r\n          </div>\r\n          <hr className=\"horizontal_line\"></hr>\r\n          <div>\r\n            <h2>Analytics of dataset</h2>\r\n          </div>\r\n          <hr className=\"horizontal_line\"></hr>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import \"./App.css\";\nimport Home from \"./pages/home/Home\";\nimport AnalysisPage from \"./pages/analysis/Analysis\";\nimport React, { Component, useState } from \"react\";\nimport { BrowserRouter as Router, Routes, useParams, Route } from \"react-router-dom\";\n\nfunction App() {\n  const Wrapper = (props) => {\n    const params = useParams();\n    return <AnalysisPage {...{ ...props, match: { params } }} />;\n  };\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route exact path=\"/\" element={<Home/>}/>\n          <Route path=\"/analysis/:datasetName\" element={<Wrapper />} />\n          {/* <Route path = '/analysis' element = {<AnalysisPage/>}/> */}\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}